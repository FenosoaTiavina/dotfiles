(deflisten test_val
  :initial "[]"
  "widgets/test.sh"
)

(defwidget t []
  (eventbox 
    :onhoverlost "eww close test_w"
    (box 
      :class "window"
      :orientation "v"
      (for v in test_val
        (box
          :halign "fill"
          :space-evenly false
          :orientation "v"
          :style "padding: 5px 0px"
          (label
            :halign "fill"
            :class "label_t"
            :text "${v.name}"
          )
          (box
            :orientation "h"
            (label
              :halign "baseline"
              :class "value_t"
              :text 
              " ${v.NET_UP < 1000 ? round(v.NET_UP, 0) : (v.NET_UP < 1000
              * 1000 ? round(v.NET_UP / 1000, 0) : round(v.NET_UP / (1000 * 1000), 0) )} ${v.NET_UP < 1000 ? 'B' : (v.NET_UP < 1000 * 1000 ? 'KB' : 'MB')}/s"
            )
            (label
              :halign "baseline"
              :class "value_t"
              :text 
              " ${v.NET_DOWN < 1000 ? round(v.NET_DOWN, 0) : (v.NET_DOWN < 1000
              * 1000 ? round(v.NET_DOWN / 1000, 0) : round(v.NET_DOWN / (1000 * 1000), 0) )} ${v.NET_DOWN < 1000 ? 'B' : (v.NET_DOWN < 1000 * 1000 ? 'KB' : 'MB')}/s"

            )
          )
        )
      )
    )
  )
)


(defwindow test_w
  :monitor 0
  :namespace "eww-bar"
  :geometry (geometry 
                  :y "5px"
                  :x "5px"
                  :anchor "top right")
  :stacking "fg"
  :exclusive false
  :focusable "none"
  (t)
)

